20230705, 20221214, 20221129, 20220928, 20221213, 20230411
Dakota: https://dakota.sandia.gov/sites/default/files/docs/6.0/html-ref/index.html
Dakota: https://dakota.sandia.gov/sites/default/files/docs/6.8/Users-6.8.0.pdf

Depends: Dakota, e3sm-unified 

Get Dakota on 
-Perlmutter: must use own install. 
-Chrysalis:
export PATH=$PATH:/soft/dakota/6.8/bin/
-Compy:
module purge
module load dakota/6.13.0
# add to the LD_LIBRARY_PATH this directory /share/apps/dakota/6.13.0/bin/
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/share/apps/dakota/6.13.0/bin/
# module commands can be executed by "source compy_env.sh"

To run:
python run_dakota.py

What run_dakota.py does:
-Reads config_ensemble.yaml
-Updates the templates/dakota[].in file with ensemble preferences from config_ensemble.yaml
-Updates setup_e3sm.py with preferences from config_ensemble.yaml
-Calls dakota, pointing it to the newly-created dakota[].in 
-Dakota sets up cloned e3sm cases in workdirXX

What run_dakota.py doesn't do:
-Run a "parent" or default e3sm simulation. You must do that first, and point to it in config_ensemble.yaml. 
-Submit the e3sm clones. 


How to run autotuning ensemble, full instructions. Benjamin M. Wagman. 20230206. 
1. Run or choose a "parent" simulation.
2. Set preferences in config_ensemble.yaml
3. Run a control +4K simulation using run.[casename].p4k.py
3. Update the two template files
   -sampling template e.g. templates/dakota_e3sm.lhs.in for lhs sampling with your parameters and bounds.
   -parameter template e.g. templates/e3sm-inp.yml.template to match the sampling template.
4. python run_dakota.py




